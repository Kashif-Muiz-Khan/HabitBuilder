@page "/"
@using HabitBuilder.Context
@using HabitBuilder.Model
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserProvider UserProvider

<PageTitle>Home</PageTitle>

@* Checks if the user is logged in, if so shows the graph and log, else prompts to log in *@
@if (user == null)
{
    <div class="alert alert-warning">
        You need to log in to see your habit progress.
    </div>
}
else
{
    <HabitGraph />
    <OrderForm />
    <OrderEditForm/>
}

@code {
    // Validates user to ensure the user is logged in
    private User user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState!.User!.Identity!.Name!;
        user = UserProvider.GetUserByUsername(username)!;

    }
}
