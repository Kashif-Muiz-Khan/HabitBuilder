﻿@using System.ComponentModel.DataAnnotations
@using HabitBuilder.Context
@using HabitBuilder.Model
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor

@inject UserProvider UserProvider // User data and actions.
@inject HabitOrderProvider HabitOrderProvider // Habit order handling.
@inject HabitProvider HabitProvider // Habit data handling.
@inject AuthenticationStateProvider AuthenticationStateProvider // Authentication state management.
@inject NavigationManager NavigationManager // Navigation control.
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject QuoteProvider QuoteProvider

<MudDialog>
    <TitleContent>
        Quote Of The Day
    </TitleContent>
    <DialogContent>
        <h5>@randomQuote.QuoteText</h5>
        <p>@randomQuote.Author</p>
    </DialogContent>
    <DialogActions>

        <MudButton Color="Color.Primary" OnClick="Submit">I Shall Improve</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();


    private User user; // Authenticated user.
    private Quote? randomQuote;

    


    [Required(ErrorMessage = "Please select a valid date")]
    private DateTime? _selectedDate = DateTime.Today; // Default to today.

    protected override async Task OnInitializedAsync()
    {
        // Load user and habits.
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState.User.Identity.Name;
        user = UserProvider.GetUserByUsername(username);
        randomQuote = await QuoteProvider.GetRandomQuoteAsync();
    }


}