@using HabitBuilder.Context
@using HabitBuilder.Model
@using ApexCharts
@using Microsoft.AspNetCore.Components.Authorization
@inject UserProvider UserProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HabitOrderProvider HabitOrderProvider

<h3>HabitGraph</h3>

<div class="card">
    <ApexChart TItem="MyData" Title="Order Chart">
        <ApexPointSeries TItem="MyData" Items="Data" Name="Total Points" SeriesType="SeriesType.Area" XValue="e => e.Order" YValue="e => e.Total" />
    </ApexChart>
</div>

@code {
    private User user;
    private IEnumerable<HabitOrder>? orders;
    private List<MyData> Data { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState!.User!.Identity!.Name!;
        user = UserProvider.GetUserByUsername(username)!;
        orders = await HabitOrderProvider.GetAllOrdersAsync(user);
        CalculateTotalPoints();
    }

    private void CalculateTotalPoints()
    {
        if (orders != null)
        {
            foreach (var order in orders)
            {
                var totalPoints = order.Items.Sum(item => item.Habit.Point);
                Data.Add(new MyData { Order = order.Id.ToString(), Total = totalPoints });
            }
        }
    }

    public class MyData
    {
        public string Order { get; set; }
        public decimal Total { get; set; }
    }
}
